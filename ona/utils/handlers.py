from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
import logging

logger = logging.getLogger(__name__)

class BaseHandler:
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    """
    def __init__(self, next_state=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        
        Args:
            next_state: –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        """
        self.next_state = next_state
    
    async def handle(self, update: Update):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
        """
        raise NotImplementedError("Subclasses must implement this method")
    
    async def set_next_state(self, update: Update, state_router, state=None):
        """
        –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            state_router: –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏–π
            state: –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç self.next_state
        """
        user_id = update.effective_user.id
        next_state = state or self.next_state
        
        if next_state:
            await state_router.set_user_state(user_id, next_state)
            logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {next_state}")


class InitialHandler(BaseHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    """
    def __init__(self):
        super().__init__(next_state="awaiting_input")
    
    async def handle(self, update: Update):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
        """
        user = update.effective_user
        
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
            "–Ø ONA ‚Äì —Ç–≤–æ–π –ª–∏—á–Ω—ã–π AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ä–æ—Å—Ç–∞ –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è.\n\n"
            "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è —á–µ—Ä–µ–∑ –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥ –ª–∏—á–Ω–æ—Å—Ç–∏. "
            "–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–∞–∑–≤–∏—Ç–∏—è.\n\n"
            "–ì–æ—Ç–æ–≤–∞ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è?",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("‚ú® –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥", callback_data="start_profiling")]
            ])
        )
        
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from ona.utils.state_router import state_router
        await self.set_next_state(update, state_router)


class AwaitingInputHandler(BaseHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    def __init__(self):
        super().__init__(next_state=None)  # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    
    async def handle(self, update: Update):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
        """
        user_message = update.message.text
        
        if "–ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥" in user_message.lower() or "–ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ" in user_message.lower():
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥–µ –≤ —Ç–µ–∫—Å—Ç–µ
            await update.message.reply_text(
                "–ü—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥ ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Å–µ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑ —Ç–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤.\n\n"
                "–ü–µ—Ä–≤—ã–π —ç—Ç–∞–ø ‚Äî —Å–±–æ—Ä –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–±–µ, –≤–∫–ª—é—á–∞—è –Ω–∞—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–¥–∞—Ç–∞, –≤—Ä–µ–º—è –∏ –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è).\n\n"
                "–•–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å?",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚ú® –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥", callback_data="start_profiling")]
                ])
            )
        else:
            # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await update.message.reply_text(
                f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n"
                "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è —Ä–∞–±–æ—Ç–∞—é –≤ —Ä–µ–∂–∏–º–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥ –ª–∏—á–Ω–æ—Å—Ç–∏. "
                "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Ç–µ–±—è –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞—à–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚ú® –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥", callback_data="start_profiling")]
                ])
            ) 
